name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  api-tests:
    name: Backend API Tests
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        working-directory: ./backend
        run: npm ci

      - name: Run backend tests
        working-directory: ./backend
        run: npm run test:ci
        env:
          MONGODB_URI: mongodb://localhost:27017/notes-app-test
          JWT_SECRET: test-secret-key
          NODE_ENV: test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  ui-tests:
    name: Frontend UI Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Start backend server
        working-directory: ./backend
        run: |
          npm ci
          npm run build
          npm start &
          sleep 10
        env:
          MONGODB_URI: mongodb://localhost:27017/notes-app-test
          JWT_SECRET: test-secret-key
          NODE_ENV: test

      - name: Run Playwright tests
        working-directory: ./frontend
        run: npx playwright test --reporter=html
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results
          path: frontend/test-results/
          retention-days: 30

  visual-tests:
    name: Visual Regression Tests
    runs-on: ubuntu-latest
    needs: [api-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: |
          cd backend && npm ci
          cd ../frontend && npm ci

      - name: Install Playwright browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps

      - name: Start backend server
        working-directory: ./backend
        run: |
          npm run build
          npm start &
          sleep 10
        env:
          MONGODB_URI: mongodb://localhost:27017/notes-app-test
          JWT_SECRET: test-secret-key
          NODE_ENV: test

      - name: Run visual regression tests
        working-directory: ./frontend
        run: npx playwright test --grep @visual --reporter=html

      - name: Upload visual test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: visual-test-results
          path: frontend/test-results/
          retention-days: 30

  build-check:
    name: Build Verification
    runs-on: ubuntu-latest
    needs: [api-tests, ui-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Build backend
        working-directory: ./backend
        run: |
          npm ci
          npm run build

      - name: Build frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm run build

      - name: Lint backend
        working-directory: ./backend
        run: npm run lint

      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint

  security-check:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Audit backend dependencies
        working-directory: ./backend
        run: npm audit --audit-level moderate

      - name: Audit frontend dependencies
        working-directory: ./frontend
        run: npm audit --audit-level moderate
